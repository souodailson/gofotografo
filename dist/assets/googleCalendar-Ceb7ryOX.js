import{s as a}from"./index-DosJhT9z.js";const s=async e=>{try{const{data:o,error:r}=await a.functions.invoke("google-generate-auth-url",{body:{userId:e}});if(r)throw r;if(o&&o.authUrl)return{authUrl:o.authUrl};throw new Error("URL de autenticação não recebida da função.")}catch(o){return console.error("Erro ao obter URL de autenticação do Google:",o),{error:o.message}}},c=async e=>{try{const{data:o,error:r}=await a.functions.invoke("google-exchange-code",{body:{code:e}});if(r)throw r;if(o&&o.tokens)return o.tokens;throw new Error(o.error||"Falha ao trocar código por tokens na função.")}catch(o){throw console.error("Erro ao trocar código por tokens:",o),o}},i=async(e,o="primary")=>{try{const{data:r,error:t}=await a.functions.invoke("google-list-calendar-events",{body:{accessToken:e,calendarId:o}});if(t)throw t;return r.events||[]}catch(r){throw console.error("Erro ao listar eventos do Google Calendar:",r),r.message.includes("Request failed with status code 401")||r.message.includes("invalid_grant")?new Error("Token de acesso inválido ou expirado. Por favor, autentique novamente."):r}},l=async e=>{try{const{data:o,error:r}=await a.functions.invoke("google-refresh-token",{body:{refreshToken:e}});if(r)throw r;if(o&&o.newTokens)return{newTokens:o.newTokens};throw new Error(o.error||"Falha ao atualizar token de acesso na função.")}catch(o){return console.error("Erro ao atualizar token de acesso:",o),{error:o.message}}};export{c as e,s as g,i as l,l as r};
